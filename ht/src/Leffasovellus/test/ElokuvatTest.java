package Leffasovellus.test;
// Generated by ComTest BEGIN
import java.util.Iterator;
import Leffasovellus.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.27 13:16:34 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class ElokuvatTest {



  // Generated by ComTest BEGIN
  /** testLisaa35 */
  @Test
  public void testLisaa35() {    // Elokuvat: 35
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elo = new Elokuva(), elo2 = new Elokuva(); 
    assertEquals("From: Elokuvat line: 39", 0, elokuvat.getLkm()); 
    elokuvat.lisaa(elo); 
    assertEquals("From: Elokuvat line: 41", 1, elokuvat.getLkm()); 
    elokuvat.lisaa(elo2); 
    assertEquals("From: Elokuvat line: 43", 2, elokuvat.getLkm()); 
    Iterator<Elokuva> it = elokuvat.iterator(); 
    assertEquals("From: Elokuvat line: 45", elo, it.next()); 
    assertEquals("From: Elokuvat line: 46", elo2, it.next()); 
    elokuvat.lisaa(elo); 
    assertEquals("From: Elokuvat line: 48", 3, elokuvat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista69 */
  @Test
  public void testPoista69() {    // Elokuvat: 69
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elo = new Elokuva(), elo2 = new Elokuva(), elo3 = new Elokuva(); 
    elo.rekisteroi(); elo2.rekisteroi(); elo3.rekisteroi(); 
    elokuvat.lisaa(elo); 
    elokuvat.lisaa(elo2); 
    elokuvat.lisaa(elo3); 
    assertEquals("From: Elokuvat line: 76", 3, elokuvat.getLkm()); 
    assertEquals("From: Elokuvat line: 77", 1, elokuvat.poista(elo)); 
    assertEquals("From: Elokuvat line: 78", 2, elokuvat.getLkm()); 
    assertEquals("From: Elokuvat line: 79", 1, elokuvat.poista(elo3)); 
    assertEquals("From: Elokuvat line: 80", 1, elokuvat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testElokuvatIterator191 
   * @throws SailoException when error
   */
  @Test
  public void testElokuvatIterator191() throws SailoException {    // Elokuvat: 191
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elo = new Elokuva(), elo2 = new Elokuva(); 
    elo.rekisteroi(); elo2.rekisteroi(); 
    elokuvat.lisaa(elo); 
    elokuvat.lisaa(elo2); 
    elokuvat.lisaa(elo); 
    StringBuffer ids = new StringBuffer(30); 
    for (Elokuva elokuva : elokuvat)
    ids.append(" "+elokuva.getId()); 
    String tulos = " " + elo.getId() + " " + elo2.getId() + " " + elo.getId(); 
    assertEquals("From: Elokuvat line: 210", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Elokuva>  i=elokuvat.iterator(); i.hasNext(); ) {
    Elokuva elokuva = i.next(); 
    ids.append(" "+elokuva.getId()); 
    }
    assertEquals("From: Elokuvat line: 218", tulos, ids.toString()); 
    Iterator<Elokuva>  i=elokuvat.iterator(); 
    assertEquals("From: Elokuvat line: 221", true, i.next() == elo); 
    assertEquals("From: Elokuvat line: 222", true, i.next() == elo2); 
    assertEquals("From: Elokuvat line: 223", true, i.next() == elo); 
    try {
    i.next(); 
    fail("Elokuvat: 225 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}